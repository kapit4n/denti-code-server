{
  "swagger": "2.0",
  "info": {
    "description": "DENTI CODE SERVER",
    "version": "1.0.0",
    "title": "Swagger denti code",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "luis.arce22@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "",
  "tags": [
    {
      "name": "denti",
      "description": "Everything about your Doctors/Patients",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/patients": {
      "get": {
        "tags": [
          "patients"
        ],
        "summary": "Get patients list",
        "description": "",
        "operationId": "patients",
        "consumes": [
          ""
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Patients"
            }
          }
        },
        "security": [
          {
            "petstore_auth": [
              "write:pets",
              "read:pets"
            ]
          }
        ]
      }
    },
    "/doctors": {
      "get": {
        "tags": [
          "doctor"
        ],
        "summary": "Add a new doctor to the store",
        "description": "",
        "operationId": "addDoctor",
        "consumes": [
          "application/json",
          "application/xml"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Doctor object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Doctor"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "doctorstore_auth": [
              "write:doctors",
              "read:doctors"
            ]
          }
        ]
      }
    },
    "/doctors/{Id}": {
      "get": {
        "tags": [
          "doctor"
        ],
        "summary": "Find doctor by ID",
        "description": "Returns a single doctor",
        "operationId": "getDoctorById",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "description": "ID of doctor to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Doctor"
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Doctor not found"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "doctor"
        ],
        "summary": "Updates a doctor in the store with form data",
        "description": "",
        "operationId": "updateDoctorWithForm",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "doctorId",
            "in": "path",
            "description": "ID of doctor that needs to be updated",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "name",
            "in": "formData",
            "description": "Updated name of the doctor",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "formData",
            "description": "Updated status of the doctor",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "doctorstore_auth": [
              "write:doctors",
              "read:doctors"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "doctor"
        ],
        "summary": "Deletes a doctor",
        "description": "",
        "operationId": "deleteDoctor",
        "produces": [
          "application/json",
          "application/xml"
        ],
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "doctorId",
            "in": "path",
            "description": "Doctor id to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Doctor not found"
          }
        },
        "security": [
          {
            "doctorstore_auth": [
              "write:doctors",
              "read:doctors"
            ]
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "doctorstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://doctorstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read:doctors": "read your doctors",
        "write:doctors": "modify doctors in your account"
      }
    }
  },
  "definitions": {
    "Patients": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "birthDate": {
          "type": "string"
        },
        "profession": {
          "type": "string"
        }
      }
    },
    "Doctor": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstName": {
          "type": "string",
          "example": "Luis"
        },
        "lastName": {
          "type": "string",
          "example": "Arce"
        },
        "speciality": {
          "type": "string",
          "example": "Dentists"
        }
      },
      "xml": {
        "name": "Doctor"
      }
    },
    "RecordType": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string",
          "example": "Record type"
        },
        "price": {
          "type": "integer",
          "example": "100"
        }
      },
      "xml": {
        "name": "RecordType"
      }
    },
    "Record": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "recordTypeId": {
          "type": "integer",
          "example": "1"
        },
        "patientId": {
          "type": "integer",
          "example": "1"
        },
        "doctorId": {
          "type": "integer",
          "example": "1"
        },
        "description": {
          "type": "string",
          "example": "Record 1"
        },
        "price": {
          "type": "Integer",
          "example": "100"
        }
      },
      "xml": {
        "name": "Record"
      }
    },
    "RecordDetail": {
      "type": "object",
      "required": [
        "name",
        "photoUrls"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "recordId": {
          "type": "integer",
          "example": "1"
        },
        "description": {
          "type": "string",
          "example": "Record 1 Action 1"
        }
      },
      "xml": {
        "name": "Doctor"
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}